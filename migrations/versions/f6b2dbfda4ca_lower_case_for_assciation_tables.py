"""lower case for assciation tables

Revision ID: f6b2dbfda4ca
Revises: 849f0e8a17e2
Create Date: 2025-10-05 23:50:30.709806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f6b2dbfda4ca'
down_revision: Union[str, Sequence[str], None] = '849f0e8a17e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('album_author',
    sa.Column('author_ID', sa.Integer(), nullable=True),
    sa.Column('album_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_ID'], ['album.ID'], ),
    sa.ForeignKeyConstraint(['author_ID'], ['author.ID'], )
    )
    op.create_table('album_track',
    sa.Column('album_ID', sa.Integer(), nullable=True),
    sa.Column('track_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_ID'], ['album.ID'], ),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], )
    )
    op.create_table('listen_history',
    sa.Column('user_ID', sa.Integer(), nullable=True),
    sa.Column('track_ID', sa.Integer(), nullable=True),
    sa.Column('listened_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('listening_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], ),
    sa.ForeignKeyConstraint(['user_ID'], ['user.ID'], )
    )
    op.create_table('track_artist',
    sa.Column('track_ID', sa.Integer(), nullable=True),
    sa.Column('author_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_ID'], ['author.ID'], ),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], )
    )
    op.create_table('playlist_track',
    sa.Column('playlist_ID ', sa.Integer(), nullable=True),
    sa.Column('track_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_ID '], ['playlist.ID'], ),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], )
    )
    op.drop_table('Playlist_Track')
    op.drop_table('Track_Artist')
    op.drop_table('Album_Track')
    op.drop_table('Listen_History')
    op.drop_table('Album_Author')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Album_Author',
    sa.Column('author_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('album_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['album_ID'], ['album.ID'], name=op.f('Album_Author_album_ID_fkey')),
    sa.ForeignKeyConstraint(['author_ID'], ['author.ID'], name=op.f('Album_Author_author_ID_fkey'))
    )
    op.create_table('Listen_History',
    sa.Column('user_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('track_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('listened_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('listening_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], name=op.f('Listen_History_track_ID_fkey')),
    sa.ForeignKeyConstraint(['user_ID'], ['user.ID'], name=op.f('Listen_History_user_ID_fkey'))
    )
    op.create_table('Album_Track',
    sa.Column('album_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('track_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['album_ID'], ['album.ID'], name=op.f('Album_Track_album_ID_fkey')),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], name=op.f('Album_Track_track_ID_fkey'))
    )
    op.create_table('Track_Artist',
    sa.Column('track_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_ID'], ['author.ID'], name=op.f('Track_Artist_author_ID_fkey')),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], name=op.f('Track_Artist_track_ID_fkey'))
    )
    op.create_table('Playlist_Track',
    sa.Column('playlist_ID ', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('track_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['playlist_ID '], ['playlist.ID'], name=op.f('Playlist_Track_playlist_ID _fkey')),
    sa.ForeignKeyConstraint(['track_ID'], ['track.ID'], name=op.f('Playlist_Track_track_ID_fkey'))
    )
    op.drop_table('playlist_track')
    op.drop_table('track_artist')
    op.drop_table('listen_history')
    op.drop_table('album_track')
    op.drop_table('album_author')
    # ### end Alembic commands ###
